git config --global user.email "vgyashwanthkumar@gmail.com" :- used to tell the git by 
which mail id the git is accessing

git config --global user.name "yashwanthvg": use to tell the git by which user name the git is going to accessing.

git config --global --get user.email
git config --global --get user.name

the above 6,7 commands returns the user mail-id and name.

git config --global --unset user.name
git config --global --unset user.email

the above 11,12 commands will unset the user id and email

git config --list : returns the user mail id, name.

git clone "remote repo link (github/bit bucket)" : used for copy pasting the repo form remote ----> to the device.

git init : used to create the local repo in the folder

git status : return the status of the files with respect to git

ls -a : is used to check whether the git folder is created or not because it is a hidden folder

git add file_name or . (i.e all files) : used to move the files to the git_staging area.

git commit -m "mention the changes here (must)" : it will store the file in the local repo i.e in our device folder.

git rm --cached file_name : used to remove the file from local repo to normal file, in order to sucessfully complete the removing processing we have to commit the change.
i.e git commit -m "someting here", and for adding back to repo we have to do add, and commit to that file.

workflow:

git init------> git add file_name --------> git commit -m "something" (for moving files to local repo )

git rm --cached file_name-------> git commit -m "something" (for removing the file from local repo)

Note: after modeifying any file we have to do add, commit for moving that file into local repo.

for creating the new remote repo in github or bit bucket we have to follow the step:

git init --> creating a connectivity between remote repo and local repo with the help github remote repo link --> push the local repo to remote repo.

for creating the link:

git remote add origin link(github/bitbucket link) : this helps to  create the link between the remote repo and local repo.
here the name of the repo which is going to store on remote repo is origin which can be anything (user specific).

git remote -v: helps to verify the link is created sucessfully or not.

git branch : return the branch name of the repo we currently working on.

git branch -M new_branch_name : used to change the current working branch name to some other name.
master == main branch in github
git push -u repo_name(i.e origin in our case) branch_name(on which branch we need to push): used to push the local repo
 to the corrsponding branch of remote repo.
Note : the use of -u ...



git checkout brach_name_need_to_shift : this helps to move from current working branch to new_branch.

git checkout -b brach_name: creating new branch called branch_name and jumping into it.

what is branch ? : it is just the duplication of the main repo (i.e master repo), the changes in one branch do not effect the 
other branch until we merge the branches.

git checkout -d branch_name : used to delete the branch by standing on other branch, we cannot delete the branch we currently
standing on (current working), we have to jump to other branch in order the delete the branch.

git diff branch_name : check the difference between the current working branch and the brach_name.












 






